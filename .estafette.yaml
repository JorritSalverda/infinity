labels:
  app-group: infinity
  language: golang

version:
  semver:
    major: 0
    minor: 2

stages:
  build:
    image: golang:1.16-alpine
    env:
      CGO_ENABLED: 0
    commands:
    - go test -failfast ./...

  # bake:
  #   image: extensions/docker:stable
  #   action: build
  #   repositories:
  #   - jsalverda
  #   path: ./binaries
  #   copy:
  #   - docker-entrypoint.sh
  #   - /etc/ssl/certs/ca-certificates.crt

  # push-to-docker-hub:
  #   image: extensions/docker:stable
  #   action: push
  #   repositories:
  #   - jsalverda

releases:
  github-release:
    clone: true
    stages:
      build:
        image: golang:1.16-alpine
        env:
          CGO_ENABLED: 0
        commands:
        - GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -ldflags "-X github.com/JorritSalverda/infinity/cmd.version=${ESTAFETTE_BUILD_VERSION}" -o ./binaries/${ESTAFETTE_GIT_NAME}-v${ESTAFETTE_BUILD_VERSION}-linux-amd64 .
        - GOOS=windows GOARCH=amd64 go build -a -installsuffix cgo -ldflags "-X github.com/JorritSalverda/infinity/cmd.version=${ESTAFETTE_BUILD_VERSION}" -o ./binaries/${ESTAFETTE_GIT_NAME}-v${ESTAFETTE_BUILD_VERSION}-windows-amd64.exe .
        - GOOS=darwin GOARCH=amd64 go build -a -installsuffix cgo -ldflags "-X github.com/JorritSalverda/infinity/cmd.version=${ESTAFETTE_BUILD_VERSION}" -o ./binaries/${ESTAFETTE_GIT_NAME}-v${ESTAFETTE_BUILD_VERSION}-darwin-amd64 .

      create-github-release:
        image: extensions/github-release:stable
        assets:
        - ./binaries/${ESTAFETTE_GIT_NAME}-v${ESTAFETTE_BUILD_VERSION}-linux-amd64
        - ./binaries/${ESTAFETTE_GIT_NAME}-v${ESTAFETTE_BUILD_VERSION}-windows-amd64.exe
        - ./binaries/${ESTAFETTE_GIT_NAME}-v${ESTAFETTE_BUILD_VERSION}-darwin-amd64

  brew-release:
    triggers:
    - release:
        name: self
        target: github-release
    stages:
      clone-tap:
        image: extensions/git-clone:stable
        repo: homebrew-core
        branch: master

      create-brew-formula:
        image: extensions/brew:stable
        formula: infinity
        description: Infinity is a CLI to easily build your applications using a pipeline as code
        homepage: https://github.com/JorritSalverda/infinity
        binaryURL: https://github.com/JorritSalverda/infinity/releases/download/v${ESTAFETTE_BUILD_VERSION}/${ESTAFETTE_GIT_NAME}-v${ESTAFETTE_BUILD_VERSION}-darwin-amd64.zip
        tapRepoDir: homebrew-core

      push-to-tap:
        image: golang:1.16-alpine
        commands:
        - apk add git
        - cd homebrew-core
        - git config user.email 'bot@estafette.io'
        - git config user.name 'estafette.bot'
        - git status
        - git add --all
        - git commit --allow-empty -m "infinity v${ESTAFETTE_BUILD_VERSION}"
        - git push origin master

  gofish-release:
    triggers:
    - release:
        name: self
        target: github-release
    stages:
      clone-fish-food:
        image: extensions/git-clone:stable
        repo: fish-food
        branch: main

      create-fish-food:
        image: extensions/gofish:stable
        description: Infinity is a CLI to easily build your applications using a pipeline as code

      push-to-tap:
        image: golang:1.16-alpine
        commands:
        - apk add git
        - cd fish-food
        - git config user.email 'bot@estafette.io'
        - git config user.name 'estafette.bot'
        - git status
        - git add --all
        - git commit --allow-empty -m "infinity v${ESTAFETTE_BUILD_VERSION}"
        - git push origin main
