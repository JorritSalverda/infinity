// Code generated by MockGen. DO NOT EDIT.
// Source: metal_runner.go

// Package lib is a generated GoMock package.
package lib

import (
	context "context"
	log "log"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMetalRunner is a mock of MetalRunner interface.
type MockMetalRunner struct {
	ctrl     *gomock.Controller
	recorder *MockMetalRunnerMockRecorder
}

// MockMetalRunnerMockRecorder is the mock recorder for MockMetalRunner.
type MockMetalRunnerMockRecorder struct {
	mock *MockMetalRunner
}

// NewMockMetalRunner creates a new mock instance.
func NewMockMetalRunner(ctrl *gomock.Controller) *MockMetalRunner {
	mock := &MockMetalRunner{ctrl: ctrl}
	mock.recorder = &MockMetalRunnerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetalRunner) EXPECT() *MockMetalRunnerMockRecorder {
	return m.recorder
}

// MetalRun mocks base method.
func (m *MockMetalRunner) MetalRun(ctx context.Context, logger *log.Logger, stage ManifestStage) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MetalRun", ctx, logger, stage)
	ret0, _ := ret[0].(error)
	return ret0
}

// MetalRun indicates an expected call of MetalRun.
func (mr *MockMetalRunnerMockRecorder) MetalRun(ctx, logger, stage interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MetalRun", reflect.TypeOf((*MockMetalRunner)(nil).MetalRun), ctx, logger, stage)
}
